apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "yb-tserver"
  labels:
    app: "yb-tserver"
    app.openshift.io/runtime: "postgresql"
spec:
  serviceName: "yb-tservers"
  podManagementPolicy: Parallel
  replicas: 1
  #volumeClaimTemplates:
  #- metadata:
  #    name: datadir0
  #    labels:
  #      app: "yb-tserver"
  #  spec:
  #    accessModes:
  #    - "ReadWriteOnce"
  #    storageClassName: gp3-csi
  #    resources:
  #      requests:
  #        storage: 5Gi
  #- metadata:
  #    name: datadir1
  #    labels:
  #      app: "yb-tserver"
  #  spec:
  #    accessModes:
  #    - "ReadWriteOnce"
  #    storageClassName: gp3-csi
  #    resources:
  #      requests:
  #        storage: 5Gi
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  selector:
    matchLabels:
      app: "yb-tserver"
  template:
    metadata:
      labels:
        app: "yb-tserver"
    spec: # yb-tservers
      terminationGracePeriodSeconds: 300
      containers:
      - name: "yb-tserver"
        image: "docker.io/yugabytedb/yugabyte:2.17.3.0-b152"
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - >
                mkdir -p /mnt/disk0/cores;
                mkdir -p /mnt/disk0/yb-data/scripts;
                if [ ! -f /mnt/disk0/yb-data/scripts/log_cleanup.sh ]; then
                  if [ -f /home/yugabyte/bin/log_cleanup.sh ]; then
                    cp /home/yugabyte/bin/log_cleanup.sh /mnt/disk0/yb-data/scripts;
                  fi;
                fi
        livenessProbe:
          exec:
            command:
            - bash
            - -c
            - touch "/mnt/disk0/disk.check" "/mnt/disk1/disk.check"
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: YBDEVOPS_CORECOPY_DIR
          value: "/mnt/disk0/cores"
        - name: MASTER_ADDRESSES
          value: "yb-master-0.yb-masters.yb-demo-0.svc.cluster.local:7100,yb-master-0.yb-masters.yb-demo-1.svc.cluster.local:7100,yb-master-0.yb-masters.yb-demo-2.svc.cluster.local:7100"
        - name: BIND_ADDRESSES
          value: "yb-tserver-0.yb-tservers.yb-demo-0.svc.cluster.local"
        - name: PLACEMENT_ZONE
          value: region-1a
        - name: PLACEMENT_REGION
          value: region-1
        - name: PLACEMENT_CLOUD
          value: ocp
        resources:
          limits:
            cpu: "1"
            memory: 4Gi
          requests:
            cpu: 200m
            memory: 1Gi
        # core dumps are collected to workingDir if
        # kernel.core_pattern is set to a relative path like
        # core.%e.%p.%t ref:
        # https://github.com/yugabyte/charts/issues/11
        workingDir: "/mnt/disk0/cores"
        command:
        - "/sbin/tini"
        - "--"
        args:
        - "/bin/bash"
        - "-c"
        - |
          if [ -f /home/yugabyte/tools/k8s_preflight.py ]; then
            /home/yugabyte/tools/k8s_preflight.py all
          fi && \
          touch "/mnt/disk0/disk.check" "/mnt/disk1/disk.check" && \
          if [ -f /home/yugabyte/tools/k8s_preflight.py ]; then
            PYTHONUNBUFFERED="true" /home/yugabyte/tools/k8s_preflight.py \
              dnscheck \
              --addr="$(BIND_ADDRESSES)" \
              --port="9100"
          fi && \
          if [ -f /home/yugabyte/tools/k8s_preflight.py ]; then
            PYTHONUNBUFFERED="true" /home/yugabyte/tools/k8s_preflight.py \
              dnscheck \
              --addr="$(BIND_ADDRESSES):9100" \
              --port="9100"
          fi && \
          if [ -f /home/yugabyte/tools/k8s_preflight.py ]; then
            PYTHONUNBUFFERED="true" /home/yugabyte/tools/k8s_preflight.py \
              dnscheck \
              --addr="0.0.0.0" \
              --port="9000"
          fi && \
          if [[ -f /home/yugabyte/tools/k8s_parent.py ]]; then
            k8s_parent="/home/yugabyte/tools/k8s_parent.py"
          else
            k8s_parent=""
          fi && \
          if [ -f /home/yugabyte/tools/k8s_preflight.py ]; then
            PYTHONUNBUFFERED="true" /home/yugabyte/tools/k8s_preflight.py \
              dnscheck \
              --addr="$(BIND_ADDRESSES)" \
              --port="9042"
          fi && \
          if [ -f /home/yugabyte/tools/k8s_preflight.py ]; then
            PYTHONUNBUFFERED="true" /home/yugabyte/tools/k8s_preflight.py \
              dnscheck \
              --addr="0.0.0.0:5433" \
              --port="5433"
          fi && \
          exec ${k8s_parent} /home/yugabyte/bin/yb-tserver \
            --fs_data_dirs=/mnt/disk0,/mnt/disk1 \
            --tserver_master_addrs=$(MASTER_ADDRESSES) \
            --metric_node_name=$(HOSTNAME) \
            --memory_limit_hard_bytes=3649044480 \
            --stderrthreshold=0 \
            --num_cpus=2 \
            --undefok=num_cpus,enable_ysql \
            --use_node_hostname_for_local_tserver=true \
            --placement_cloud="$(PLACEMENT_CLOUD)" \
            --placement_region="$(PLACEMENT_REGION)" \
            --placement_zone="$(PLACEMENT_ZONE)" \
            --rpc_bind_addresses=$(BIND_ADDRESSES) \
            --server_broadcast_addresses=$(BIND_ADDRESSES):9100 \
            --webserver_interface=0.0.0.0 \
            --enable_ysql=true \
            --pgsql_proxy_bind_address=0.0.0.0:5433 \
            --cql_proxy_bind_address=$(BIND_ADDRESSES)
        ports:
        - containerPort: 9000
          name: "http-ui"
        - containerPort: 12000
          name: "http-ycql-met"
        - containerPort: 11000
          name: "http-yedis-met"
        - containerPort: 13000
          name: "http-ysql-met"
        - containerPort: 9100
          name: "tcp-rpc-port"
        - containerPort: 6379
          name: "tcp-yedis-port"
        - containerPort: 9042
          name: "tcp-yql-port"
        - containerPort: 5433
          name: "tcp-ysql-port"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - name: debug-hooks-volume
          mountPath: /opt/debug_hooks_config
        - name: datadir0
          mountPath: /mnt/disk0
        - name: datadir1
          mountPath: /mnt/disk1
      - name: yb-cleanup
        image: "docker.io/yugabytedb/yugabyte:2.17.3.0-b152"
        imagePullPolicy: IfNotPresent
        env:
        - name: USER
          value: "yugabyte"
        command:
        - "/sbin/tini"
        - "--"
        args:
        - "/bin/bash"
        - "-c"
        - >
          while true; do
            sleep 3600;
            /home/yugabyte/scripts/log_cleanup.sh;
          done
        volumeMounts:
        - name: datadir0
          mountPath: /home/yugabyte/
          subPath: yb-data
        - name: datadir0
          mountPath: /var/yugabyte/cores
          subPath: cores
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 128Mi
      volumes:
      - name: debug-hooks-volume
        configMap:
          name: yb-demo-0-yugabyte-tserver-hooks
          defaultMode: 0755
      - name: datadir0
        emptyDir: {}
      - name: datadir1
        emptyDir: {}
