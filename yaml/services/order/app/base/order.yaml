apiVersion: v1
kind: Service
metadata:
  labels:
    app: order
    app.kubernetes.io/name: order
    app.kubernetes.io/version: 1.0-SNAPSHOT
  name: order
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app.kubernetes.io/name: order
    app.kubernetes.io/version: 1.0-SNAPSHOT
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.openshift.io/connects-to: "order-database,my-cluster"
  labels:
    app: order
    app.kubernetes.io/name: order
    app.kubernetes.io/version: 1.0-SNAPSHOT
    app.openshift.io/runtime: quarkus
    app.kubernetes.io/part-of: order
  name: order
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/version: 1.0-SNAPSHOT
      app.kubernetes.io/name: order
  strategy: {}
  template:
    metadata:
      labels:
        app: order
        app.kubernetes.io/name: order
        app.kubernetes.io/version: 1.0-SNAPSHOT
        app.openshift.io/runtime: quarkus
    spec:
      containers:
      - image: quay.io/rhsgsa/order:1.0-SNAPSHOT
        name: order
        env:
        - name: QUARKUS_MONGODB_CONNECTION_STRING
          value: "mongodb://mongodb:27017/?retryReads=true&retryWrites=true"
        - name: QUARKUS_MONGODB_DATABASE
          value: "order-database"
        - name: QUARKUS_MONGODB_CREDENTIALS_USERNAME
          value: orders
        - name: QUARKUS_MONGODB_CREDENTIALS_PASSWORD
          value: password123
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
          - containerPort: 8080
            name: http
            protocol: TCP
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        resources:
          limits:
            cpu: "1"
            memory: 2Gi
          requests:
            cpu: 100m
            memory: 512Mi
        startupProbe:
            httpGet:
              path: /q/health/started
              port: 8080
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
        readinessProbe:
            httpGet:
              path: /q/health/ready
              port: 8080
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
        livenessProbe:
            httpGet:
              path: /q/health/live
              port: 8080
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
status: {}
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: order
    app.kubernetes.io/name: order
    app.kubernetes.io/version: 1.0-SNAPSHOT
    app.openshift.io/runtime: quarkus
  name: order
spec:
  port:
    targetPort: 8080
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Allow
  to:
    kind: Service
    name: order
